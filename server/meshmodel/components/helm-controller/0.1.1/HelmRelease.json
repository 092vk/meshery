{"kind":"HelmRelease","apiVersion":"v2beta1","displayName":"Helm Release","format":"JSON","metadata":{},"model":{"name":"helm-controller","version":"0.1.1","modelDisplayName":"helm-controller","category":"","subCategory":""},"schema":"{\n \"description\": \"HelmReleaseSpec defines the desired state of a Helm release.\",\n \"properties\": {\n  \"chart\": {\n   \"description\": \"Chart defines the template of the v1beta1.HelmChart that should be created for this HelmRelease.\",\n   \"properties\": {\n    \"spec\": {\n     \"description\": \"Spec holds the template for the v1beta1.HelmChartSpec for this HelmRelease.\",\n     \"properties\": {\n      \"chart\": {\n       \"description\": \"The name or path the Helm chart is available at in the SourceRef.\",\n       \"type\": \"string\"\n      },\n      \"interval\": {\n       \"description\": \"Interval at which to check the v1beta1.Source for updates. Defaults to 'HelmReleaseSpec.Interval'.\",\n       \"type\": \"string\"\n      },\n      \"sourceRef\": {\n       \"description\": \"The name and namespace of the v1beta1.Source the chart is available at.\",\n       \"properties\": {\n        \"apiVersion\": {\n         \"description\": \"APIVersion of the referent.\",\n         \"type\": \"string\"\n        },\n        \"kind\": {\n         \"description\": \"Kind of the referent.\",\n         \"enum\": [\n          \"HelmRepository\",\n          \"GitRepository\",\n          \"Bucket\"\n         ],\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \"Name of the referent.\",\n         \"maxLength\": 253,\n         \"minLength\": 1,\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace of the referent.\",\n         \"maxLength\": 63,\n         \"minLength\": 1,\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"valuesFile\": {\n       \"description\": \"Alternative values file to use as the default chart values, expected to be a relative path in the SourceRef. Ignored when omitted.\",\n       \"type\": \"string\"\n      },\n      \"version\": {\n       \"default\": \"*\",\n       \"description\": \"Version semver expression, ignored for charts from v1beta1.GitRepository and v1beta1.Bucket sources. Defaults to latest when omitted.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"chart\",\n      \"sourceRef\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"spec\"\n   ],\n   \"type\": \"object\"\n  },\n  \"dependsOn\": {\n   \"description\": \"DependsOn may contain a dependency.CrossNamespaceDependencyReference slice with references to HelmRelease resources that must be ready before this HelmRelease can be reconciled.\",\n   \"items\": {\n    \"description\": \"CrossNamespaceDependencyReference holds the reference to a dependency.\",\n    \"properties\": {\n     \"name\": {\n      \"description\": \"Name holds the name reference of a dependency.\",\n      \"type\": \"string\"\n     },\n     \"namespace\": {\n      \"description\": \"Namespace holds the namespace reference of a dependency.\",\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"install\": {\n   \"description\": \"Install holds the configuration for Helm install actions for this HelmRelease.\",\n   \"properties\": {\n    \"createNamespace\": {\n     \"description\": \"CreateNamespace tells the Helm install action to create the HelmReleaseSpec.TargetNamespace if it does not exist yet. On uninstall, the namespace will not be garbage collected.\",\n     \"type\": \"boolean\"\n    },\n    \"disableHooks\": {\n     \"description\": \"DisableHooks prevents hooks from running during the Helm install action.\",\n     \"type\": \"boolean\"\n    },\n    \"disableOpenAPIValidation\": {\n     \"description\": \"DisableOpenAPIValidation prevents the Helm install action from validating rendered templates against the Kubernetes OpenAPI Schema.\",\n     \"type\": \"boolean\"\n    },\n    \"disableWait\": {\n     \"description\": \"DisableWait disables the waiting for resources to be ready after a Helm install has been performed.\",\n     \"type\": \"boolean\"\n    },\n    \"remediation\": {\n     \"description\": \"Remediation holds the remediation configuration for when the Helm install action for the HelmRelease fails. The default is to not perform any action.\",\n     \"properties\": {\n      \"ignoreTestFailures\": {\n       \"description\": \"IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an install action but fail. Defaults to 'Test.IgnoreFailures'.\",\n       \"type\": \"boolean\"\n      },\n      \"remediateLastFailure\": {\n       \"description\": \"RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to 'false'.\",\n       \"type\": \"boolean\"\n      },\n      \"retries\": {\n       \"description\": \"Retries is the number of retries that should be attempted on failures before bailing. Remediation, using an uninstall, is performed between each attempt. Defaults to '0', a negative integer equals to unlimited retries.\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"replace\": {\n     \"description\": \"Replace tells the Helm install action to re-use the 'ReleaseName', but only if that name is a deleted release which remains in the history.\",\n     \"type\": \"boolean\"\n    },\n    \"skipCRDs\": {\n     \"description\": \"SkipCRDs tells the Helm install action to not install any CRDs. By default, CRDs are installed if not already present.\",\n     \"type\": \"boolean\"\n    },\n    \"timeout\": {\n     \"description\": \"Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"interval\": {\n   \"description\": \"Interval at which to reconcile the Helm release.\",\n   \"type\": \"string\"\n  },\n  \"kubeConfig\": {\n   \"description\": \"KubeConfig for reconciling the HelmRelease on a remote cluster. When specified, KubeConfig takes precedence over ServiceAccountName.\",\n   \"properties\": {\n    \"secretRef\": {\n     \"description\": \"SecretRef holds the name to a secret that contains a 'value' key with the kubeconfig file as the value. It must be in the same namespace as the HelmRelease. It is recommended that the kubeconfig is self-contained, and the secret is regularly updated if credentials such as a cloud-access-token expire. Cloud specific `cmd-path` auth helpers will not function without adding binaries and credentials to the Pod that is responsible for reconciling the HelmRelease.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"maxHistory\": {\n   \"description\": \"MaxHistory is the number of revisions saved by Helm for this HelmRelease. Use '0' for an unlimited number of revisions; defaults to '10'.\",\n   \"type\": \"integer\"\n  },\n  \"postRenderers\": {\n   \"description\": \"PostRenderers holds an array of Helm PostRenderers, which will be applied in order of their definition.\",\n   \"items\": {\n    \"description\": \"PostRenderer contains a Helm PostRenderer specification.\",\n    \"properties\": {\n     \"kustomize\": {\n      \"description\": \"Kustomization to apply as PostRenderer.\",\n      \"properties\": {\n       \"images\": {\n        \"description\": \"Images is a list of (image name, new name, new tag or digest) for changing image names, tags or digests. This can also be achieved with a patch, but this operator is simpler to specify.\",\n        \"items\": {\n         \"description\": \"Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.\",\n         \"properties\": {\n          \"digest\": {\n           \"description\": \"Digest is the value used to replace the original image tag. If digest is present NewTag value is ignored.\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name is a tag-less image name.\",\n           \"type\": \"string\"\n          },\n          \"newName\": {\n           \"description\": \"NewName is the value used to replace the original name.\",\n           \"type\": \"string\"\n          },\n          \"newTag\": {\n           \"description\": \"NewTag is the value used to replace the original tag.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"patchesJson6902\": {\n        \"description\": \"JSON 6902 patches, defined as inline YAML objects.\",\n        \"items\": {\n         \"description\": \"JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.\",\n         \"properties\": {\n          \"patch\": {\n           \"description\": \"Patch contains the JSON6902 patch document with an array of operation objects.\",\n           \"items\": {\n            \"description\": \"JSON6902 is a JSON6902 operation object. https://tools.ietf.org/html/rfc6902#section-4\",\n            \"properties\": {\n             \"from\": {\n              \"type\": \"string\"\n             },\n             \"op\": {\n              \"enum\": [\n               \"test\",\n               \"remove\",\n               \"add\",\n               \"replace\",\n               \"move\",\n               \"copy\"\n              ],\n              \"type\": \"string\"\n             },\n             \"path\": {\n              \"type\": \"string\"\n             },\n             \"value\": {\n              \"x-kubernetes-preserve-unknown-fields\": true\n             }\n            },\n            \"required\": [\n             \"op\",\n             \"path\"\n            ],\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"target\": {\n           \"description\": \"Target points to the resources that the patch document should be applied to.\",\n           \"properties\": {\n            \"annotationSelector\": {\n             \"description\": \"AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.\",\n             \"type\": \"string\"\n            },\n            \"group\": {\n             \"description\": \"Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md\",\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md\",\n             \"type\": \"string\"\n            },\n            \"labelSelector\": {\n             \"description\": \"LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name to match resources with.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace to select resources from.\",\n             \"type\": \"string\"\n            },\n            \"version\": {\n             \"description\": \"Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"patch\",\n          \"target\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"patchesStrategicMerge\": {\n        \"description\": \"Strategic merge patches, defined as inline YAML objects.\",\n        \"items\": {\n         \"x-kubernetes-preserve-unknown-fields\": true\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"releaseName\": {\n   \"description\": \"ReleaseName used for the Helm release. Defaults to a composition of '[TargetNamespace-]Name'.\",\n   \"maxLength\": 53,\n   \"minLength\": 1,\n   \"type\": \"string\"\n  },\n  \"rollback\": {\n   \"description\": \"Rollback holds the configuration for Helm rollback actions for this HelmRelease.\",\n   \"properties\": {\n    \"cleanupOnFail\": {\n     \"description\": \"CleanupOnFail allows deletion of new resources created during the Helm rollback action when it fails.\",\n     \"type\": \"boolean\"\n    },\n    \"disableHooks\": {\n     \"description\": \"DisableHooks prevents hooks from running during the Helm rollback action.\",\n     \"type\": \"boolean\"\n    },\n    \"disableWait\": {\n     \"description\": \"DisableWait disables the waiting for resources to be ready after a Helm rollback has been performed.\",\n     \"type\": \"boolean\"\n    },\n    \"force\": {\n     \"description\": \"Force forces resource updates through a replacement strategy.\",\n     \"type\": \"boolean\"\n    },\n    \"recreate\": {\n     \"description\": \"Recreate performs pod restarts for the resource if applicable.\",\n     \"type\": \"boolean\"\n    },\n    \"timeout\": {\n     \"description\": \"Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"serviceAccountName\": {\n   \"description\": \"The name of the Kubernetes service account to impersonate when reconciling this HelmRelease.\",\n   \"type\": \"string\"\n  },\n  \"storageNamespace\": {\n   \"description\": \"StorageNamespace used for the Helm storage. Defaults to the namespace of the HelmRelease.\",\n   \"maxLength\": 63,\n   \"minLength\": 1,\n   \"type\": \"string\"\n  },\n  \"suspend\": {\n   \"description\": \"Suspend tells the controller to suspend reconciliation for this HelmRelease, it does not apply to already started reconciliations. Defaults to false.\",\n   \"type\": \"boolean\"\n  },\n  \"targetNamespace\": {\n   \"description\": \"TargetNamespace to target when performing operations for the HelmRelease. Defaults to the namespace of the HelmRelease.\",\n   \"maxLength\": 63,\n   \"minLength\": 1,\n   \"type\": \"string\"\n  },\n  \"test\": {\n   \"description\": \"Test holds the configuration for Helm test actions for this HelmRelease.\",\n   \"properties\": {\n    \"enable\": {\n     \"description\": \"Enable enables Helm test actions for this HelmRelease after an Helm install or upgrade action has been performed.\",\n     \"type\": \"boolean\"\n    },\n    \"ignoreFailures\": {\n     \"description\": \"IgnoreFailures tells the controller to skip remediation when the Helm tests are run but fail. Can be overwritten for tests run after install or upgrade actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.\",\n     \"type\": \"boolean\"\n    },\n    \"timeout\": {\n     \"description\": \"Timeout is the time to wait for any individual Kubernetes operation during the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"timeout\": {\n   \"description\": \"Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm action. Defaults to '5m0s'.\",\n   \"type\": \"string\"\n  },\n  \"uninstall\": {\n   \"description\": \"Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.\",\n   \"properties\": {\n    \"disableHooks\": {\n     \"description\": \"DisableHooks prevents hooks from running during the Helm rollback action.\",\n     \"type\": \"boolean\"\n    },\n    \"keepHistory\": {\n     \"description\": \"KeepHistory tells Helm to remove all associated resources and mark the release as deleted, but retain the release history.\",\n     \"type\": \"boolean\"\n    },\n    \"timeout\": {\n     \"description\": \"Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"upgrade\": {\n   \"description\": \"Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.\",\n   \"properties\": {\n    \"cleanupOnFail\": {\n     \"description\": \"CleanupOnFail allows deletion of new resources created during the Helm upgrade action when it fails.\",\n     \"type\": \"boolean\"\n    },\n    \"disableHooks\": {\n     \"description\": \"DisableHooks prevents hooks from running during the Helm upgrade action.\",\n     \"type\": \"boolean\"\n    },\n    \"disableOpenAPIValidation\": {\n     \"description\": \"DisableOpenAPIValidation prevents the Helm upgrade action from validating rendered templates against the Kubernetes OpenAPI Schema.\",\n     \"type\": \"boolean\"\n    },\n    \"disableWait\": {\n     \"description\": \"DisableWait disables the waiting for resources to be ready after a Helm upgrade has been performed.\",\n     \"type\": \"boolean\"\n    },\n    \"force\": {\n     \"description\": \"Force forces resource updates through a replacement strategy.\",\n     \"type\": \"boolean\"\n    },\n    \"preserveValues\": {\n     \"description\": \"PreserveValues will make Helm reuse the last release's values and merge in overrides from 'Values'. Setting this flag makes the HelmRelease non-declarative.\",\n     \"type\": \"boolean\"\n    },\n    \"remediation\": {\n     \"description\": \"Remediation holds the remediation configuration for when the Helm upgrade action for the HelmRelease fails. The default is to not perform any action.\",\n     \"properties\": {\n      \"ignoreTestFailures\": {\n       \"description\": \"IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an upgrade action but fail. Defaults to 'Test.IgnoreFailures'.\",\n       \"type\": \"boolean\"\n      },\n      \"remediateLastFailure\": {\n       \"description\": \"RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.\",\n       \"type\": \"boolean\"\n      },\n      \"retries\": {\n       \"description\": \"Retries is the number of retries that should be attempted on failures before bailing. Remediation, using 'Strategy', is performed between each attempt. Defaults to '0', a negative integer equals to unlimited retries.\",\n       \"type\": \"integer\"\n      },\n      \"strategy\": {\n       \"description\": \"Strategy to use for failure remediation. Defaults to 'rollback'.\",\n       \"enum\": [\n        \"rollback\",\n        \"uninstall\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"timeout\": {\n     \"description\": \"Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"values\": {\n   \"description\": \"Values holds the values for this Helm release.\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"valuesFrom\": {\n   \"description\": \"ValuesFrom holds references to resources containing Helm values for this HelmRelease, and information about how they should be merged.\",\n   \"items\": {\n    \"description\": \"ValuesReference contains a reference to a resource containing Helm values, and optionally the key they can be found at.\",\n    \"properties\": {\n     \"kind\": {\n      \"description\": \"Kind of the values referent, valid values are ('Secret', 'ConfigMap').\",\n      \"enum\": [\n       \"Secret\",\n       \"ConfigMap\"\n      ],\n      \"type\": \"string\"\n     },\n     \"name\": {\n      \"description\": \"Name of the values referent. Should reside in the same namespace as the referring resource.\",\n      \"maxLength\": 253,\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"optional\": {\n      \"description\": \"Optional marks this ValuesReference as optional. When set, a not found error for the values reference is ignored, but any ValuesKey, TargetPath or transient error will still result in a reconciliation failure.\",\n      \"type\": \"boolean\"\n     },\n     \"targetPath\": {\n      \"description\": \"TargetPath is the YAML dot notation path the value should be merged at. When set, the ValuesKey is expected to be a single flat value. Defaults to 'None', which results in the values getting merged at the root.\",\n      \"type\": \"string\"\n     },\n     \"valuesKey\": {\n      \"description\": \"ValuesKey is the data key where the values.yaml or a specific value can be found at. Defaults to 'values.yaml'.\",\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"kind\",\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  }\n },\n \"required\": [\n  \"chart\",\n  \"interval\"\n ],\n \"title\": \"Helm Release\",\n \"type\": \"object\"\n}"}