{"kind":"Secret","apiVersion":"secretsmanager.services.k8s.aws/v1alpha1","displayName":"Secret","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"aws-secretsmanager-controller","modelDisplayName":"","primaryColor":"","published":false,"secondaryColor":"","shape":"","styleOverrides":"","subCategory":"","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"aws-secretsmanager-controller","version":"0.0.2","displayName":"","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"","metadata":null},"metadata":{},"components":null,"relationships":null},"schema":"{\n \"description\": \"Secret is the Schema for the Secrets API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"SecretSpec defines the desired state of Secret.\",\n   \"properties\": {\n    \"description\": {\n     \"description\": \"The description of the secret.\",\n     \"type\": \"string\"\n    },\n    \"forceOverwriteReplicaSecret\": {\n     \"description\": \"Specifies whether to overwrite a secret with the same name in the destination Region. By default, secrets aren't overwritten.\",\n     \"type\": \"boolean\"\n    },\n    \"kmsKeyID\": {\n     \"description\": \"The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt the secret value in the secret. An alias is always prefixed by alias/, for example alias/aws/secretsmanager. For more information, see About aliases (https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html). \\n To use a KMS key in a different account, use the key ARN or the alias ARN. \\n If you don't specify this value, then Secrets Manager uses the key aws/secretsmanager. If that key doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value. \\n If the secret is in a different Amazon Web Services account from the credentials calling the API, then you can't use aws/secretsmanager to encrypt the secret, and you must create and use a customer managed KMS key.\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"The name of the new secret. \\n The secret name can contain ASCII letters, numbers, and the following characters: /_+=.@- \\n Do not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters after the secret name at the end of the ARN.\",\n     \"type\": \"string\"\n    },\n    \"replicaRegions\": {\n     \"description\": \"A list of Regions and KMS keys to replicate secrets.\",\n     \"items\": {\n      \"description\": \"A custom type that specifies a Region and the KmsKeyId for a replica secret.\",\n      \"properties\": {\n       \"kmsKeyID\": {\n        \"type\": \"string\"\n       },\n       \"region\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"secretString\": {\n     \"description\": \"The text data to encrypt and store in this new version of the secret. We recommend you use a JSON structure of key/value pairs for your secret value. \\n Either SecretString or SecretBinary must have a value, but not both. \\n If you create a secret by using the Secrets Manager console then Secrets Manager puts the protected secret text in only the SecretString parameter. The Secrets Manager console stores the information as a JSON structure of key/value pairs that a Lambda rotation function can parse.\",\n     \"properties\": {\n      \"key\": {\n       \"description\": \"Key is the key within the secret\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"name is unique within a namespace to reference a secret resource.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"namespace defines the space within which the secret name must be unique.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"key\"\n     ],\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"tags\": {\n     \"description\": \"A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string, for example: \\n [{\\\"Key\\\":\\\"CostCenter\\\",\\\"Value\\\":\\\"12345\\\"},{\\\"Key\\\":\\\"environment\\\",\\\"Value\\\":\\\"production\\\"}] \\n Secrets Manager tag key names are case sensitive. A tag with the key \\\"ABC\\\" is a different tag from one with key \\\"abc\\\". \\n If you check tags in permissions policies as part of your security strategy, then adding or removing a tag can change permissions. If the completion of this operation would result in you losing your permissions for this secret, then Secrets Manager blocks the operation and returns an Access Denied error. For more information, see Control access to secrets using tags (https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac) and Limit access to identities with tags that match secrets' tags (https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2). \\n For information about how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters (https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json). If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text. \\n For tag quotas and naming restrictions, see Service quotas for Tagging (https://docs.aws.amazon.com/general/latest/gr/arg.html#taged-reference-quotas) in the Amazon Web Services General Reference guide.\",\n     \"items\": {\n      \"description\": \"A structure that contains information about a tag.\",\n      \"properties\": {\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Secret\",\n \"type\": \"object\"\n}"}