{"kind":"Subscription","apiVersion":"sns.services.k8s.aws/v1alpha1","displayName":"Subscription","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"isNamespaced":true},"model":{"name":"aws-sns-controller","version":"1.0.6","displayName":"aws-sns-controller","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"","metadata":null},"metadata":{},"components":null,"relationships":null},"schema":"{\n \"description\": \"Subscription is the Schema for the Subscriptions API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"SubscriptionSpec defines the desired state of Subscription. \\n A wrapper type for the attributes of an Amazon SNS subscription.\",\n   \"properties\": {\n    \"deliveryPolicy\": {\n     \"type\": \"string\"\n    },\n    \"endpoint\": {\n     \"description\": \"The endpoint that you want to receive notifications. Endpoints vary by protocol: \\n - For the http protocol, the (public) endpoint is a URL beginning with http://. \\n - For the https protocol, the (public) endpoint is a URL beginning with https://. \\n - For the email protocol, the endpoint is an email address. \\n - For the email-json protocol, the endpoint is an email address. \\n - For the sms protocol, the endpoint is a phone number of an SMS-enabled device. \\n - For the sqs protocol, the endpoint is the ARN of an Amazon SQS queue. \\n - For the application protocol, the endpoint is the EndpointArn of a mobile app and device. \\n - For the lambda protocol, the endpoint is the ARN of an Lambda function. \\n - For the firehose protocol, the endpoint is the ARN of an Amazon Kinesis Data Firehose delivery stream.\",\n     \"type\": \"string\"\n    },\n    \"filterPolicy\": {\n     \"type\": \"string\"\n    },\n    \"filterPolicyScope\": {\n     \"type\": \"string\"\n    },\n    \"protocol\": {\n     \"description\": \"The protocol that you want to use. Supported protocols include: \\n - http – delivery of JSON-encoded message via HTTP POST \\n - https – delivery of JSON-encoded message via HTTPS POST \\n - email – delivery of message via SMTP \\n - email-json – delivery of JSON-encoded message via SMTP \\n - sms – delivery of message via SMS \\n - sqs – delivery of JSON-encoded message to an Amazon SQS queue \\n - application – delivery of JSON-encoded message to an EndpointArn for a mobile app and device \\n - lambda – delivery of JSON-encoded message to an Lambda function \\n - firehose – delivery of JSON-encoded message to an Amazon Kinesis Data Firehose delivery stream.\",\n     \"type\": \"string\"\n    },\n    \"rawMessageDelivery\": {\n     \"type\": \"string\"\n    },\n    \"redrivePolicy\": {\n     \"type\": \"string\"\n    },\n    \"subscriptionRoleARN\": {\n     \"type\": \"string\"\n    },\n    \"topicARN\": {\n     \"description\": \"The ARN of the topic you want to subscribe to.\",\n     \"type\": \"string\"\n    },\n    \"topicRef\": {\n     \"description\": \"AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \\n from: name: my-api\",\n     \"properties\": {\n      \"from\": {\n       \"description\": \"AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"protocol\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Subscription\",\n \"type\": \"object\"\n}"}