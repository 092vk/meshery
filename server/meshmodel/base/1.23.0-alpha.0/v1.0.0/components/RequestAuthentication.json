{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Request Authentication",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "base",
   "displayName": "base",
   "description": "",
   "status": "ignored",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "artifacthub"
   },
   "category": {
    "name": "Uncategorized",
    "metadata": null
   },
   "subCategory": "Uncategorized",
   "metadata": {
    "capabilities": "",
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "\u003csvg width=\"160\" height=\"240\" viewBox=\"0 0 160 240\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M0 210H160L60 240L0 210Z\" fill=\"#466BB0\"/\u003e\n\u003cpath d=\"M0 200L60 190V80L0 200Z\" fill=\"#466BB0\"/\u003e\n\u003cpath d=\"M70 190L160 200L70 0V190Z\" fill=\"#466BB0\"/\u003e\n\u003c/svg\u003e\n",
    "svgComplete": "",
    "svgWhite": "\u003csvg viewBox=\"6.386270046234131 3.7419400215148926 18.227430820465088 25.258059978485107\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M6.38627 24.7904L13.2215 23.738V12.1613L6.38627 24.7904Z\" fill=\"white\"/\u003e\u003cpath d=\"M6.38627 25.8427H24.6137L13.2215 29L6.38627 25.8427Z\" fill=\"white\"/\u003e\u003cpath d=\"M14.3608 23.7379L24.6137 24.7904L14.3608 3.74194V23.7379Z\" fill=\"white\"/\u003e\u003c/svg\u003e"
   },
   "model": {
    "version": "1.23.0-alpha.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "status": "ignored",
   "styleOverrides": "",
   "styles": "",
   "svgColor": "\u003csvg width=\"160\" height=\"240\" viewBox=\"0 0 160 240\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M0 210H160L60 240L0 210Z\" fill=\"#466BB0\"/\u003e\n\u003cpath d=\"M0 200L60 190V80L0 200Z\" fill=\"#466BB0\"/\u003e\n\u003cpath d=\"M70 190L160 200L70 0V190Z\" fill=\"#466BB0\"/\u003e\n\u003c/svg\u003e\n",
   "svgComplete": "",
   "svgWhite": "\u003csvg viewBox=\"6.386270046234131 3.7419400215148926 18.227430820465088 25.258059978485107\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M6.38627 24.7904L13.2215 23.738V12.1613L6.38627 24.7904Z\" fill=\"white\"/\u003e\u003cpath d=\"M6.38627 25.8427H24.6137L13.2215 29L6.38627 25.8427Z\" fill=\"white\"/\u003e\u003cpath d=\"M14.3608 23.7379L24.6137 24.7904L14.3608 3.74194V23.7379Z\" fill=\"white\"/\u003e\u003c/svg\u003e"
  },
  "component": {
   "kind": "RequestAuthentication",
   "version": "security.istio.io/v1",
   "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html\",\n   \"properties\": {\n    \"jwtRules\": {\n     \"description\": \"Define the list of JWTs that can be validated at the selected workloads' proxy.\",\n     \"items\": {\n      \"properties\": {\n       \"audiences\": {\n        \"description\": \"The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.\",\n        \"items\": {\n         \"minLength\": 1,\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"forwardOriginalToken\": {\n        \"description\": \"If set to true, the original token will be kept for the upstream request.\",\n        \"type\": \"boolean\"\n       },\n       \"fromCookies\": {\n        \"description\": \"List of cookie names from which JWT is expected.\",\n        \"items\": {\n         \"minLength\": 1,\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"fromHeaders\": {\n        \"description\": \"List of header locations from which JWT is expected.\",\n        \"items\": {\n         \"properties\": {\n          \"name\": {\n           \"description\": \"The HTTP header name.\",\n           \"minLength\": 1,\n           \"type\": \"string\"\n          },\n          \"prefix\": {\n           \"description\": \"The prefix that should be stripped before decoding the token.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"fromParams\": {\n        \"description\": \"List of query parameters from which JWT is expected.\",\n        \"items\": {\n         \"minLength\": 1,\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"issuer\": {\n        \"description\": \"Identifies the issuer that issued the JWT.\",\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"jwks\": {\n        \"description\": \"JSON Web Key Set of public keys to validate signature of the JWT.\",\n        \"type\": \"string\"\n       },\n       \"jwksUri\": {\n        \"description\": \"URL of the provider's public key set to validate signature of the JWT.\",\n        \"maxLength\": 2048,\n        \"minLength\": 1,\n        \"type\": \"string\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"url must have scheme http:// or https://\",\n          \"rule\": \"url(self).getScheme() in ['http', 'https']\"\n         }\n        ]\n       },\n       \"jwks_uri\": {\n        \"description\": \"URL of the provider's public key set to validate signature of the JWT.\",\n        \"maxLength\": 2048,\n        \"minLength\": 1,\n        \"type\": \"string\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"url must have scheme http:// or https://\",\n          \"rule\": \"url(self).getScheme() in ['http', 'https']\"\n         }\n        ]\n       },\n       \"outputClaimToHeaders\": {\n        \"description\": \"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\",\n        \"items\": {\n         \"properties\": {\n          \"claim\": {\n           \"description\": \"The name of the claim to be copied from.\",\n           \"minLength\": 1,\n           \"type\": \"string\"\n          },\n          \"header\": {\n           \"description\": \"The name of the header to be created.\",\n           \"minLength\": 1,\n           \"pattern\": \"^[-_A-Za-z0-9]+$\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"header\",\n          \"claim\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"outputPayloadToHeader\": {\n        \"description\": \"This field specifies the header name to output a successfully verified JWT payload to the backend.\",\n        \"type\": \"string\"\n       },\n       \"timeout\": {\n        \"description\": \"The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.\",\n        \"type\": \"string\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"must be a valid duration greater than 1ms\",\n          \"rule\": \"duration(self) \\u003e= duration('1ms')\"\n         }\n        ]\n       }\n      },\n      \"required\": [\n       \"issuer\"\n      ],\n      \"type\": \"object\",\n      \"x-kubernetes-validations\": [\n       {\n        \"message\": \"only one of jwks or jwksUri can be set\",\n        \"rule\": \"(has(self.jwksUri)?1:0)+(has(self.jwks_uri)?1:0)+(has(self.jwks)?1:0)\\u003c=1\"\n       }\n      ]\n     },\n     \"maxItems\": 4096,\n     \"type\": \"array\"\n    },\n    \"selector\": {\n     \"description\": \"Optional.\",\n     \"properties\": {\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"maxLength\": 63,\n        \"type\": \"string\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"wildcard not allowed in label value match\",\n          \"rule\": \"!self.contains('*')\"\n         }\n        ]\n       },\n       \"description\": \"One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.\",\n       \"maxProperties\": 4096,\n       \"type\": \"object\",\n       \"x-kubernetes-validations\": [\n        {\n         \"message\": \"wildcard not allowed in label key match\",\n         \"rule\": \"self.all(key, !key.contains('*'))\"\n        },\n        {\n         \"message\": \"key must not be empty\",\n         \"rule\": \"self.all(key, key.size() != 0)\"\n        }\n       ]\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"targetRef\": {\n     \"properties\": {\n      \"group\": {\n       \"description\": \"group is the group of the target resource.\",\n       \"maxLength\": 253,\n       \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n       \"type\": \"string\"\n      },\n      \"kind\": {\n       \"description\": \"kind is kind of the target resource.\",\n       \"maxLength\": 63,\n       \"minLength\": 1,\n       \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"name is the name of the target resource.\",\n       \"maxLength\": 253,\n       \"minLength\": 1,\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"namespace is the namespace of the referent.\",\n       \"type\": \"string\",\n       \"x-kubernetes-validations\": [\n        {\n         \"message\": \"cross namespace referencing is not currently supported\",\n         \"rule\": \"self.size() == 0\"\n        }\n       ]\n      }\n     },\n     \"required\": [\n      \"kind\",\n      \"name\"\n     ],\n     \"type\": \"object\",\n     \"x-kubernetes-validations\": [\n      {\n       \"message\": \"Support kinds are core/Service and gateway.networking.k8s.io/Gateway\",\n       \"rule\": \"[self.group, self.kind] in [['core','Service'], ['','Service'], ['gateway.networking.k8s.io','Gateway']]\"\n      }\n     ]\n    },\n    \"targetRefs\": {\n     \"description\": \"Optional.\",\n     \"items\": {\n      \"properties\": {\n       \"group\": {\n        \"description\": \"group is the group of the target resource.\",\n        \"maxLength\": 253,\n        \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n        \"type\": \"string\"\n       },\n       \"kind\": {\n        \"description\": \"kind is kind of the target resource.\",\n        \"maxLength\": 63,\n        \"minLength\": 1,\n        \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"name is the name of the target resource.\",\n        \"maxLength\": 253,\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"namespace is the namespace of the referent.\",\n        \"type\": \"string\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"cross namespace referencing is not currently supported\",\n          \"rule\": \"self.size() == 0\"\n         }\n        ]\n       }\n      },\n      \"required\": [\n       \"kind\",\n       \"name\"\n      ],\n      \"type\": \"object\",\n      \"x-kubernetes-validations\": [\n       {\n        \"message\": \"Support kinds are core/Service and gateway.networking.k8s.io/Gateway\",\n        \"rule\": \"[self.group, self.kind] in [['core','Service'], ['','Service'], ['gateway.networking.k8s.io','Gateway']]\"\n       }\n      ]\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"only one of targetRefs or workloadSelector can be set\",\n     \"rule\": \"(has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)\\u003c=1\"\n    }\n   ]\n  }\n },\n \"title\": \"Request Authentication\",\n \"type\": \"object\"\n}"
  }
 }