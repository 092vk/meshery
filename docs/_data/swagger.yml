consumes:
    - application/json
    - multipart/form-data
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
info:
    description: |-
        the purpose of this application is to provide an application
        that is using plain go code to define an API

        This should demonstrate all the possible comment annotations
        that are available to turn go code into a fully compliant swagger 2.0 spec
    title: Meshery API.
    license:
        name: Apache-2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.txt
    version: 0.4.27
basePath: /
paths:
    /api/perf/profile/result/{id}:
        get:
            operationId: idGetSinglePerfResult
            responses:
                "200":
                    description: Returns Single test result
            description: Returns an individual result from provider
            tags:
                - PerfAPI
            summary: Handles GET requests for perf result
    /api/provider:
        get:
            responses:
                "200":
                    description: ""
            description: Update the choice of provider in system
            tags:
                - ProvidersAPI
            summary: Handle GET request for the choice of provider
            operationId: idChoiceProvider
            parameters:
                - type: string
                  x-go-name: Provider
                  name: provider
                  in: query
    /api/system/kubernetes:
        post:
            description: Used to add kubernetes config to System
            tags:
                - SystemAPI
            summary: Handle POST request for Kubernetes Config
            operationId: idPostK8SConfig
            responses:
                "200":
                    description: Returns saved kubernetes config
        delete:
            description: Used to delete kubernetes config to System
            tags:
                - SystemAPI
            summary: Handle DELETE request for Kubernetes Config
            operationId: idDeleteK8SConfig
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/static-board:
        get:
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus static board
            operationId: idGetPrometheusStaticBoard
            responses:
                "200":
                    description: Returns Prometheus static board
                    schema:
                        type: object
                        additionalProperties: false
            description: Used to fetch the static board
    /api/user/performance/profiles/{id}/run:
        get:
            description: Runs the load test with the given parameters
            tags:
                - PerformanceAPI
            summary: Handle GET request to run a performance test
            operationId: idRunPerformanceTest
            parameters:
                - name: Body
                  in: query
            responses:
                "200":
                    description: ""
    /api/application/types:
        get:
            description: Get application file type
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Meshery Application with the provided type
            operationId: typeGetMesheryApplication
            responses:
                "200":
                    description: Fetches a single Meshery Application
    /api/filter:
        get:
            description: Returns all the Meshery Filters saved by the current user
            tags:
                - FiltersAPI
            summary: Handle GET request for all filters
            operationId: idGetFilterFile
            responses:
                "200":
                    description: Returns all meshery filters
        post:
            summary: Handle POST requests for Meshery Filters
            operationId: idPostFilterFile
            responses:
                "200":
                    description: Returns a single meshery filter
            description: Used to save/update a Meshery Filter
            tags:
                - FiltersAPI
    /api/meshmodel/generate:
        post:
            description: Generates Meshery Components for the given payload
            tags:
                - MeshmodelComponentGenerate
            summary: Handle POST request for component generation
            operationId: idPostMeshModelComponentGenerate
            responses:
                "200":
                    description: ""
    /api/meshmodel/model/{model}:
        get:
            description: |-
                Example: /api/meshmodel/model/kubernetes
                Models can be further filtered through query parameter
                ?version={version}
                ?order={field} orders on the passed field
                ?sort={[asc/desc]} Default behavior is asc
                ?search={[true/false]} If search is true then a greedy search is performed on both model name and model display
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 25. To return all results: pagesize=all
                ?trim={[true]} When trim is set to true, the underlying schemas are not returned for entities
            tags:
                - GetMeshmodelEntititiesByModel
            summary: Handle GET request for getting all meshmodel entities of a specific model.
            operationId: idGetMeshmodelEntititiesByModel
            responses:
                "200":
                    description: ""
                    headers:
                        subCategory:
                            type: string
                        version:
                            type: string
                        category:
                            type: string
                        components:
                            type: array
                            items: {}
                        modelDisplayName:
                            type: string
                        name:
                            type: string
                        relationships:
                            type: array
                            items: {}
    /api/application/:
        get:
            description: Returns requests for all Meshery Applications
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Application Files
            operationId: idGetApplicationFileRequest
            responses:
                "200":
                    description: Returns all meshery applications
    /api/application/{id}:
        get:
            operationId: idGetMesheryApplication
            parameters:
                - format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: Fetches a single Meshery Application
            description: |-
                Fetches the list of all applications saved by the current user

                ```?updated_after=<timestamp>``` timestamp should be of the format `YYYY-MM-DD HH:MM:SS`

                ```?order={field}``` orders on the passed field

                ```?search=<application name>``` A string matching is done on the specified application name

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Meshery Application with the given id
        delete:
            description: 'Deletes a meshery application file with ID: id'
            tags:
                - ApplicationsAPI
            summary: Handle Delete for a Meshery Application File
            operationId: idDeleteMesheryApplicationFile
            parameters:
                - format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: ""
    /api/system/sync:
        get:
            summary: Handle GET request for config sync
            operationId: idSystemSync
            responses:
                "200":
                    description: Returns User Load Test Preferencee
            description: Used to send session data to the UI for initial sync
            tags:
                - SystemAPI
    /api/user/logout:
        get:
            description: Redirects user for auth or issues session
            tags:
                - UserAPI
            summary: Handlers GET request for User logout
            operationId: idGetUserLogout
            responses:
                "200":
                    description: ""
    /api/filter/catalog:
        post:
            tags:
                - FiltersAPI
            summary: Handle GET request for catalog filters
            operationId: idGetCatalogMesheryFiltersHandler
            responses:
                "200":
                    description: Returns a single meshery filter
            description: Used to get catalog filters
    /api/filter/deploy:
        post:
            summary: Handle POST request for Filter File Deploy
            operationId: idPostDeployFilterFile
            responses:
                "200":
                    description: Returns the response of the Filter files
            description: Deploy an attached filter file with the request
            tags:
                - FilterAPI
        delete:
            tags:
                - FilterAPI
            summary: Handle DELETE request for Filter File Deploy
            operationId: idDeleteFilterFile
            responses:
                "200":
                    description: ""
            description: Delete a deployed filter file with the request
    /api/pattern/deploy:
        delete:
            description: Delete a deployed pattern with the request
            tags:
                - PatternsAPI
            summary: Handle DELETE request for Pattern Deploy
            operationId: idDeleteDeployPattern
            responses:
                "200":
                    description: ""
        post:
            tags:
                - PatternsAPI
            summary: Handle POST request for Pattern Deploy
            operationId: idPostDeployPattern
            parameters:
                - type: file
                  x-go-name: FormFile
                  name: Upload Yaml/Yml File
                  in: formData
            responses:
                "200":
                    description: ""
            description: Deploy an attached pattern with the request
    /api/user/prefs/perf:
        get:
            responses:
                "200":
                    description: Returns load test preferences
            description: Used for fetching load test preferences
            tags:
                - UserAPI
            summary: Handle GET request for load test preferences
            operationId: idGetLoadPreferences
            parameters:
                - type: string
                  format: uuid
                  x-go-name: UUID
                  name: uuid
                  in: query
        post:
            description: Used for persisting load test preferences
            tags:
                - UserAPI
            summary: Handle POST request for load test preferences
            operationId: idPostLoadPreferences
            parameters:
                - name: Body
                  in: body
                  schema: {}
            responses:
                "200":
                    description: ""
        delete:
            description: Used for deleting load test preferences
            tags:
                - UserAPI
            summary: Handle DELETE request for load test preferences
            operationId: idDeleteLoadPreferences
            parameters:
                - type: string
                  format: uuid
                  x-go-name: UUID
                  name: uuid
                  in: query
            responses:
                "200":
                    description: ""
    /api/user/schedules/{id}:
        get:
            operationId: idGetSingleSchedule
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
            responses:
                "200":
                    description: Returns a single schedules
            description: Fetches and returns the schedule with the given id
            tags:
                - SchedulesAPI
            summary: Handle GET reqeuest for Schedules
        delete:
            responses:
                "200":
                    description: Returns List of saved schedules
            description: Deletes a schedule with the given id
            tags:
                - SchedulesAPI
            summary: Handle DELETE reqeuest for Schedules
            operationId: idDeleteSchedules
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
    /api/pattern/clone/{id}:
        post:
            tags:
                - PatternsAPI
            summary: Handle Clone for a Meshery Pattern
            operationId: idCloneMesheryPattern
            responses:
                "200":
                    description: ""
            description: 'Creates a local copy of a published pattern with id: id'
    /api/pattern/{id}:
        get:
            tags:
                - PatternsAPI
            summary: Handle GET for a Meshery Pattern
            operationId: idGetMesheryPattern
            parameters:
                - x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
            responses:
                "200":
                    description: Returns a single meshery pattern
            description: Fetches the pattern with the given id
        delete:
            tags:
                - PatternsAPI
            summary: Handle Delete for multiple Meshery Patterns
            operationId: idDeleteMesheryPattern
            parameters:
                - in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
            responses:
                "200":
                    description: ""
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
    /api/system/adapter/manage:
        post:
            description: Used to persist adapter config
            tags:
                - SystemAPI
            summary: Handle POST requests to persist adapter config
            operationId: idPostAdapterConfig
            parameters:
                - name: meshLocationURL
                  in: body
                  schema:
                    type: string
                  x-go-name: MeshLocationURL
            responses:
                "200":
                    description: Returns all the meshery adapters
                    schema:
                        items: {}
                        type: array
        delete:
            responses:
                "200":
                    description: ""
            description: Used to delete adapter configuration
            tags:
                - SystemAPI
            summary: Handle DELETE requests to delete adapter config
            operationId: idDeleteAdapterConfig
            parameters:
                - x-go-name: Adapter
                  name: adapter
                  in: query
                  type: string
    /api/telemetry/metrics/board_import:
        post:
            description: Used for importing Grafana board for Prometheus
            tags:
                - PrometheusAPI
            summary: Handle POST request for Prometheus board import
            operationId: idPostPrometheusBoardImport
            responses:
                "200":
                    description: Response for prometheus board import
    /provider:
        get:
            summary: Handle GET request to provider UI
            operationId: idProvider
            responses:
                "200":
                    description: ""
            description: Servers providers UI
            tags:
                - ProvidersAPI
    /api/meshmodel/model/{model}/component/{name}:
        get:
            responses:
                "200":
                    description: ""
                    schema:
                        type: object
                        additionalProperties: false
                    headers:
                        metadata: {}
                        model: {}
                        schema:
                            type: string
                        apiVersion:
                            type: string
                        displayName:
                            type: string
                        format: {}
                        kind:
                            type: string
            description: |-
                Example: /api/meshmodel/model/kubernetes/component/Namespace
                Components can be further filtered through query parameter
                ?version={version} If version is unspecified then all models are returned
                ?apiVersion={apiVersion} If apiVersion is unspecified then all models are returned
                ?order={field} orders on the passed field
                ?sort={[asc/desc]} Default behavior is asc
                ?search={[true/false]} If search is true then a greedy search is performed
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 25. To return all results: pagesize=all
            tags:
                - MeshmodelGetByName
            summary: Handle GET request for getting meshmodel components of a specific type by name.
            operationId: idMeshmodelGetByName
    /api/meshmodel/validate:
        post:
            summary: Handle POST request for validate
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
            description: Validate the given value with the given schema
            tags:
                - MeshmodelValidate
    /api/pattern:
        get:
            description: |-
                Returns the list of all the patterns saved by the current user
                This will return all the patterns with their details
                ?updated_after=<timestamp> timestamp should be of the format `YYYY-MM-DD HH:MM:SS`
                ?order={field} orders on the passed field
                ?search=<design name> A string matching is done on the specified design name
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 10
            tags:
                - PatternsAPI
            summary: Handle GET request for patterns
            operationId: idGetPatternFiles
            responses:
                "200":
                    description: Returns all meshery patterns
        post:
            responses:
                "200":
                    description: Returns a single meshery pattern
            description: Edit/update a meshery pattern
            tags:
                - PatternsAPI
            summary: Handle POST requests for patterns
            operationId: idPostPatternFile
    /api/system/meshsync/prometheus:
        get:
            summary: Handle GET request for fetching prometheus
            operationId: idMeshSyncPrometheus
            responses:
                "200":
                    schema:
                        additionalProperties: false
                        type: object
                    description: Returns a map for v1 services
            description: Fetches Prometheus
            tags:
                - SystemAPI
    /api/telemetry/metrics/config:
        get:
            description: Used for fetching Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle GET for Prometheus configuration
            operationId: idGetPrometheusConfig
            responses:
                "200":
                    description: Returns prometheus configuration
        post:
            responses:
                "200":
                    description: ""
            description: Used for persisting Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle POST for Prometheus configuration
            operationId: idPostPrometheusConfig
            parameters:
                - x-go-name: PrometheusURL
                  name: prometheusURL
                  in: body
                  schema:
                    type: string
        delete:
            description: Used for deleting Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle DELETE for Prometheus configuration
            operationId: idDeletePrometheusConfig
            responses:
                "200":
                    description: ""
    /api/user/performance/profiles/results:
        get:
            description: Returns pages of all the performance results from Remote Provider
            tags:
                - PerformanceAPI
            summary: Handles GET requests for performance results
            operationId: idGetAllPerformanceResults
            responses:
                "200":
                    description: Returns all performance results
    /api/user/prefs:
        get:
            description: Returns User Load Test Preferences
            tags:
                - UserAPI
            summary: Handle GET for User Load Test Preferences
            operationId: idGetUserTestPrefs
            responses:
                "200":
                    description: Returns User Load Test Preferencee
        post:
            description: Updates User Load Test Preferences
            tags:
                - UserAPI
            summary: Handle GET for User Load Test Preferences
            operationId: idPostUserTestPrefs
            responses:
                "200":
                    description: Returns User Load Test Preferencee
    /api/application/deploy:
        post:
            description: Deploy an attached application file with the request
            tags:
                - ApplicationsAPI
            summary: Handle POST request for Application File Deploy
            operationId: idPostDeployApplicationFile
            parameters:
                - name: Upload Yaml/Yml File
                  in: formData
                  type: file
                  x-go-name: FormFile
            responses:
                "200":
                    description: Returns the response of the application files
        delete:
            description: Delete a deployed application file with the request
            tags:
                - ApplicationsAPI
            summary: Handle DELETE request for Application File Deploy
            operationId: idDeleteApplicationFile
            responses:
                "200":
                    description: ""
    /api/oam/{type}/{name}:
        get:
            description: |-
                Returns component details of a workload/trait/scope by given name in the URL

                {type} being of either trait, scope, workload; registration of adapter capabilities.
                Example: /api/oam/workload/Application => Here {type} is "workload" and {name} is "Application"
                it should be noted that both {type} and {name} should be valid
            tags:
                - PatternsAPI
            summary: Handles GET requests for component details for OAM objects
            operationId: idOAMComponentDetails
            responses:
                "200":
                    description: ""
    /api/system/adapter/operation:
        post:
            responses:
                "200":
                    description: ""
            description: Used to send operations to the adapters
            tags:
                - SystemAPI
            summary: Handle POST requests for Adapter Operations
            operationId: idPostAdapterOperation
            parameters:
                - type: string
                  x-go-name: Adapter
                  name: adapter
                  in: query
                - type: string
                  x-go-name: Query
                  name: query
                  in: query
                - in: query
                  type: string
                  x-go-name: CustomBody
                  name: customBody
                - name: namespace
                  in: query
                  type: string
                  x-go-name: Namespace
                - type: string
                  x-go-name: Delete
                  name: deleteOp
                  in: query
    /api/system/kubernetes/contexts:
        post:
            tags:
                - SystemAPI
            summary: Handle POST requests for Kubernetes Context list
            operationId: idPostK8SContexts
            responses:
                "200":
                    description: Returns kubernetes context list
            description: Returns the context list for a given k8s config
    /api/telemetry/metrics/grafana/config:
        post:
            description: Used for persisting Grafana configuration
            tags:
                - GrafanaAPI
            summary: Handle POST request for Grafana configuration
            operationId: idPostGrafanaConfig
            parameters:
                - name: Body
                  in: body
                  required: true
                  schema: {}
            responses:
                "200":
                    description: ""
        delete:
            description: Used for Delete Grafana configuration
            tags:
                - GrafanaAPI
            summary: Handle DELETE request for Grafana configuration
            operationId: idDeleteGrafanaConfig
            responses:
                "200":
                    description: ""
        get:
            description: Used for fetching Grafana configuration
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana configuration
            operationId: idGetGrafanaConfig
            responses:
                "200":
                    description: Returns Grafana configs
    /api/filter/catalog/publish:
        post:
            description: Publishes filter to Meshery Catalog by setting visibility to published and setting catalog data
            tags:
                - FiltersAPI
            summary: Handle Publish for a Meshery Filter
            operationId: idPublishCatalogFilterHandler
            responses:
                "200":
                    description: ""
    /api/filter/{id}:
        get:
            tags:
                - FiltersAPI
            summary: Handle GET request for a Meshery Filter
            operationId: idGetMesheryFilter
            parameters:
                - in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
            responses:
                "200":
                    description: Returns a single meshery filter
            description: Fetches the Meshery Filter with the given id
        delete:
            description: 'Deletes a meshery filter with ID: id'
            tags:
                - FiltersAPI
            summary: Handle Delete for a Meshery Filter
            operationId: idDeleteMesheryFilter
            parameters:
                - format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: ""
    /api/meshmodel/model/{model}/relationship:
        get:
            responses:
                "200":
                    description: |-
                        https://docs.google.com/drawings/d/1_qzQ_YxvCWPYrOBcdqGMlMwfbsZx96SBuIkbn8TfKhU/edit?pli=1
                        see RELATIONSHIPDEFINITIONS table in the diagram
                    schema:
                        type: object
                        additionalProperties: false
                    headers:
                        kind:
                            type: string
                        metadata: {}
                        model: {}
                        selectors: {}
                        subType:
                            type: string
                        apiVersion:
                            type: string
            description: |-
                Example: /api/meshmodel/model/kubernetes/relationship
                Relationships can be further filtered through query parameter
                ?version={version}
                ?order={field} orders on the passed field
                ?sort={[asc/desc]} Default behavior is asc
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 25. To return all results: pagesize=all
            tags:
                - GetAllMeshmodelRelationships
            summary: Handle GET request for getting meshmodel relationships of a specific model.
            operationId: idGetAllMeshmodelRelationships
    /api/pattern/catalog:
        post:
            description: Used to get catalog patterns
            tags:
                - PatternsAPI
            summary: Handle GET request for catalog patterns
            operationId: idGetCatalogMesheryPatternsHandler
            responses:
                "200":
                    description: Returns a single meshery pattern
    /api/pattern/catalog/publish:
        post:
            summary: Handle Publish for a Meshery Pattern
            operationId: idPublishCatalogPatternHandler
            responses:
                "200":
                    description: ""
            description: Publishes pattern to Meshery Catalog by setting visibility to published and setting catalog data
            tags:
                - PatternsAPI
    /api/system/version:
        get:
            description: Returns the running Meshery version
            tags:
                - SystemAPI
            summary: Handle GET request for system/server version
            operationId: idGetSystemVersion
            responses:
                "200":
                    description: Returns Meshery version
    /api/telemetry/metrics/grafana/scan:
        get:
            summary: Handle GET request for Grafana
            operationId: idGetGrafana
            responses:
                "200":
                    description: Returns a map for v1 services
                    schema:
                        additionalProperties: false
                        type: object
            description: Fetches and returns Grafana
            tags:
                - GrafanaAPI
    /api/meshmodel/model/{model}/relationship/{name}:
        get:
            tags:
                - GetMeshmodelRelationshipByName
            summary: Handle GET request for getting meshmodel relationships of a specific model by name.
            operationId: idGetMeshmodelRelationshipByName
            responses:
                "200":
                    description: |-
                        https://docs.google.com/drawings/d/1_qzQ_YxvCWPYrOBcdqGMlMwfbsZx96SBuIkbn8TfKhU/edit?pli=1
                        see RELATIONSHIPDEFINITIONS table in the diagram
                    schema:
                        type: object
                        additionalProperties: false
                    headers:
                        metadata: {}
                        model: {}
                        selectors: {}
                        subType:
                            type: string
                        apiVersion:
                            type: string
                        kind:
                            type: string
            description: |-
                Example: /api/meshmodel/model/kubernetes/relationship/Edge
                Relationships can be further filtered through query parameter
                ?version={version}
                ?order={field} orders on the passed field
                ?sort={[asc/desc]} Default behavior is asc
                ?search={[true/false]} If search is true then a greedy search is performed
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 25. To return all results: pagesize=all
    /api/perf/profile:
        get:
            parameters:
                - in: query
                  name: Query
                - name: Body
                  in: body
                  schema: {}
            responses:
                "200":
                    description: ""
            description: Runs the load test with the given parameters
            tags:
                - PerfAPI
            summary: Handle GET request to run a test
            operationId: idRunPerfTest
    /api/provider/extension:
        get:
            operationId: idReactComponents
            responses:
                "200":
                    description: ""
            description: handles the requests to serve react components from the provider package
            tags:
                - ProvidersAPI
            summary: Handle GET request for React Components
    /api/user/performance/profiles:
        get:
            description: Returns the list of all the performance profiles saved by the current user
            tags:
                - PerformanceAPI
            summary: Handle GET requests for performance profiles
            operationId: idGetPerformanceProfiles
            responses:
                "200":
                    description: Returns all the performance profiles
        post:
            description: Save performance profile using the current provider's persistence mechanism
            tags:
                - PerformanceAPI
            summary: Handle POST requests for saving performance profile
            operationId: idSavePerformanceProfile
            parameters:
                - in: body
                  schema: {}
                  name: Body
            responses:
                "200":
                    description: Returns a single performance profile
    /api/filter/file/{id}:
        get:
            tags:
                - FiltersAPI
            summary: Handle GET request for filter file with given id
            operationId: idGetFilterFiles
            responses:
                "200":
                    description: Returns a single meshery filter
            description: Returns the Meshery Filter file saved by the current user with the given id
    /api/meshmodel/model:
        get:
            description: |-
                ?version={version} If version is unspecified then all models are returned
                ?order={field} orders on the passed field
                ?category={category of model} If category in unspecified then all models are returned
                ?sort={[asc/desc]} Default behavior is asc
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 25. To return all results: pagesize=all
            tags:
                - GetMeshmodelModels
            summary: Handle GET request for getting all meshmodel models. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModels
            responses:
                "200":
                    description: ""
                    headers:
                        category:
                            type: string
                        modelDisplayName:
                            type: string
                        name:
                            type: string
                        subCategory:
                            type: string
                        version:
                            type: string
    /api/patterns:
        delete:
            responses:
                "200":
                    description: ""
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            tags:
                - PatternsAPI
            summary: Handle Delete for multiple Meshery Patterns
            operationId: idDeleteMesheryPattern
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
    /api/system/adapters:
        get:
            description: Fetches and returns all the adapters and ping adapters
            tags:
                - SystemAPI
            summary: Handle GET request for adapters
            operationId: idGetSystemAdapters
            parameters:
                - type: string
                  x-go-name: Adapter
                  name: adapter
                  in: query
            responses:
                "200":
                    description: Return all the adapters
                    schema:
                        type: array
                        items: {}
    /api/telemetry/metrics/ping:
        get:
            summary: Handle GET request for Prometheus Ping
            operationId: idGetPrometheusPing
            responses:
                "200":
                    description: ""
            description: Used to ping prometheus
            tags:
                - PrometheusAPI
    /api/user/schedules:
        get:
            description: Returns the list of all the schedules saved by the current user
            tags:
                - SchedulesAPI
            summary: Handle GET reqeuest for Schedules
            operationId: idGetSchedules
            responses:
                "200":
                    description: Returns List of saved schedules
        post:
            description: Save schedule using the current provider's persistence mechanism
            tags:
                - SchedulesAPI
            summary: Handle POST reqeuest for Schedules
            operationId: idPostSchedules
            responses:
                "200":
                    description: Returns a single schedules
    /api/content/design/share:
        post:
            description: Used to share designs with others
            tags:
                - ShareContent
            summary: Handle POST request for Sharing content
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
    /api/telemetry/metrics/grafana/boards:
        get:
            parameters:
                - x-go-name: DashboardSearch
                  name: dashboardSearch
                  in: query
                  type: string
            responses:
                "200":
                    description: Returns Grafana boards and panels
                    schema:
                        type: array
                        items: {}
            description: Used for fetching Grafana boards and panels
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana boards
            operationId: idGetGrafanaBoards
        post:
            description: Used for persist Grafana boards and panel selections
            tags:
                - GrafanaAPI
            summary: Handle POST request for Grafana boards
            operationId: idPostGrafanaBoards
            responses:
                "200":
                    description: ""
    /api/user/performance/profiles/{id}:
        get:
            description: Returns single performance profile with the given id
            tags:
                - PerformanceAPI
            summary: Handle GET requests for performance results of a profile
            operationId: idGetSinglePerformanceProfile
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: Returns a single performance profile
        delete:
            tags:
                - PerformanceAPI
            summary: Handle Delete requests for performance profiles
            operationId: idDeletePerformanceProfile
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: ""
            description: Deletes a performance profile with the given id
    /api/user/profile/{id}:
        get:
            operationId: idGetUserByIDHandler
            responses:
                "200":
                    description: Returns user info
            description: Returns User info
            tags:
                - UserAPI
            summary: Handle GET for User info by ID
    /api/filter/clone/{id}:
        post:
            responses:
                "200":
                    description: ""
            description: 'Creates a local copy of a published filter with id: id'
            tags:
                - FiltersAPI
            summary: Handle Clone for a Meshery Filter
            operationId: idCloneMesheryFilter
    /api/perf/profile/result:
        get:
            description: Returns pages of all the perf results from Remote Provider
            tags:
                - PerfAPI
            summary: Handles GET requests for perf results
            operationId: idGetAllPerfResults
            responses:
                "200":
                    description: Returns all performance results
    /api/system/meshsync/grafana:
        get:
            description: Fetches Prometheus and Grafana
            tags:
                - SystemAPI
            summary: Handle GET request for mesh-sync grafana
            operationId: idMeshSyncGrafana
            responses:
                "200":
                    schema:
                        type: object
                        additionalProperties: false
                    description: Returns a map for v1 services
    /api/telemetry/metrics/grafana/query:
        get:
            description: Used for handling Grafana queries
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana queries
            operationId: idGetGrafanaQuery
            responses:
                "200":
                    description: ""
    /api/provider/capabilities:
        get:
            summary: Handle GET requests for Provider
            operationId: idGetProviderCapabilities
            responses:
                "200":
                    description: ""
            description: Returns the capabilities.json for the provider
            tags:
                - ProvidersAPI
    /api/meshmodel/components/register:
        post:
            responses:
                "200":
                    description: ""
            description: Validate the given value with the given schema
            tags:
                - MeshmodelValidate
            summary: Handle POST request for registering meshmodel components.
            operationId: idPostMeshModelValidate
    /api/oam/{type}:
        get:
            operationId: idGETOAMMesheryPattern
            responses:
                "200":
                    description: ""
            description: |-
                Getting list of workloads/traits/scopes

                {type} being of either trait, scope, workload; registration of adapter capabilities.
                Example: /api/oam/workload => Here {type} is "workload"
            tags:
                - PatternsAPI
            summary: Handles the get requests for the OAM objects
        post:
            description: |-
                Adding a workload/trait/scope

                {type} being of either trait, scope, workload; registration of adapter capabilities.
                Example: /api/oam/trait => Here {type} is "trait"
            tags:
                - PatternsAPI
            summary: Handles registering OMA objects
            operationId: idPOSTOAMRegister
            responses:
                "200":
                    description: ""
    /api/providers:
        get:
            description: Returns the available list of providers
            tags:
                - ProvidersAPI
            summary: Handle GET request for list of providers
            operationId: idGetProvidersList
            responses:
                "200":
                    description: Returns a list of available providers
                    schema:
                        type: object
                        additionalProperties: false
    /api/telemetry/metrics/boards:
        post:
            operationId: idPostPrometheusBoard
            parameters:
                - in: body
                  required: true
                  schema:
                    type: array
                    items: {}
                  name: Body
            responses:
                "200":
                    description: ""
            description: Used to persist selected board and panels
            tags:
                - PrometheusAPI
            summary: Handle POST request for Prometheus board
    /api/telemetry/metrics/grafana/ping:
        get:
            description: Used to initiate a Grafana ping
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana ping
            operationId: idGetGrafanaPing
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/query:
        get:
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus Query
            operationId: idGetPrometheusQuery
            responses:
                "200":
                    description: ""
            description: Used to prometheus queries
    /api/user/token:
        get:
            summary: Handle GET request for tokens
            operationId: idGetTokenProvider
            description: |-
                Returns token from the actual provider in a file
                resposese:
                200:
            tags:
                - UserAPI
        post:
            description: |-
                Receives token from the actual provider
                resposese:
                200:
            tags:
                - UserAPI
            summary: Handle POST request for tokens
            operationId: idPostTokenProvider
    /api/application/download/{id}/{sourcetype}:
        get:
            description: Get the application source-content
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Meshery Application with of source content
            operationId: typeGetApplication
            parameters:
                - type: file
                  x-go-name: FormFile
                  name: Upload Yaml/Yml File
                  in: formData
            responses: {}
    /api/application/{sourcetype}:
        post:
            description: Updates the design for the provided application
            tags:
                - ApplicationsAPI
            summary: Handle POST request for Application Files
            operationId: idPutApplicationFileRequest
            responses:
                "200":
                    description: Fetches a single Meshery Application
    /api/meshmodel/model/{model}/component:
        get:
            description: |-
                Example: /api/meshmodel/model/kubernetes/component
                Components can be further filtered through query parameter
                ?version={version}
                ?apiVersion={apiVersion} If apiVersion is unspecified then all models are returned
                ?order={field} orders on the passed field
                ?sort={[asc/desc]} Default behavior is asc
                ?page={page-number} Default page number is 1
                ?pagesize={pagesize} Default pagesize is 25. To return all results: pagesize=all
            tags:
                - MeshmodelGetByType
            summary: Handle GET request for getting meshmodel components of a specific type. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idMeshmodelGetByType
            responses:
                "200":
                    description: ""
                    schema:
                        type: object
                        additionalProperties: false
                    headers:
                        apiVersion:
                            type: string
                        displayName:
                            type: string
                        format: {}
                        kind:
                            type: string
                        metadata: {}
                        model: {}
                        schema:
                            type: string
    /api/oam/{type}/{name}/{id}:
        get:
            responses:
                "200":
                    description: ""
            description: |-
                Returns details of a workload/trait/scope by given name and id in the URL

                {type} being of either trait, scope, workload; registration of adapter capabilities.
                Example: /api/oam/workload/Application/asdqe123sa275sasd => Here {type} is "workload"
                {name} is "Application" and {id} is "asdqe123sa275sasd". It should be noted that all of three, i.e {type},
                {name} and {id} must be valid
            tags:
                - PatternsAPI
            summary: Handles GET requests for component details for OAM objects
            operationId: idOAMComponentDetailByID
    /api/system/kubernetes/ping?contexts={id}:
        get:
            summary: Handle GET request for Kubernetes ping
            operationId: idGetKubernetesPing
            responses:
                "200":
                    description: ""
            description: Fetches server version to simulate ping
            tags:
                - SystemAPI
    /api/user/login:
        get:
            description: Redirects user for auth or issues session
            tags:
                - UserAPI
            summary: Handlers GET request for User login
            operationId: idGetUserLogin
            responses:
                "200":
                    description: ""
    /api/user/performance/profiles/{id}/results:
        get:
            description: Fetchs pages of results from Remote Provider for the given id
            tags:
                - PerformanceAPI
            summary: Handle GET request for results of a profile
            operationId: idGETProfileResults
            parameters:
                - format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: Returns all performance results
definitions:
    VolumeListOKBody:
        description: VolumeListOKBody Volume list response
        x-go-package: github.com/docker/docker/api/types/volume
    AuthenticateOKBody:
        description: AuthenticateOKBody authenticate o k body
        x-go-package: github.com/docker/docker/api/types/registry
    Plugin:
        description: Plugin A plugin for the Engine API
        x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
        description: PluginConfigArgs plugin config args
        x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
        description: PluginConfigUser plugin config user
        x-go-package: github.com/docker/docker/api/types
    Volume:
        description: Volume volume
        x-go-package: github.com/docker/docker/api/types
    VolumeCreateBody:
        description: VolumeCreateBody Volume configuration
        x-go-package: github.com/docker/docker/api/types/volume
    ContainerTopOKBody:
        description: ContainerTopOKBody OK response to ContainerTop operation
        x-go-package: github.com/docker/docker/api/types/container
    GraphDriverData:
        title: GraphDriverData Information about a container's graph driver.
        x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
        description: PluginConfigInterface The interface between Docker and the plugin
        x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
        description: PluginConfigRootfs plugin config rootfs
        x-go-package: github.com/docker/docker/api/types
    PluginDevice:
        description: PluginDevice plugin device
        x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
        description: PluginInterfaceType plugin interface type
        x-go-package: github.com/docker/docker/api/types
    ServiceUpdateResponse:
        x-go-package: github.com/docker/docker/api/types
        description: ServiceUpdateResponse service update response
    VolumeUsageData:
        description: |-
            VolumeUsageData Usage details about the volume. This information is used by the
            `GET /system/df` endpoint, and omitted in other endpoints.
        x-go-package: github.com/docker/docker/api/types
    ContainerCreateCreatedBody:
        description: ContainerCreateCreatedBody OK response to ContainerCreate operation
        x-go-package: github.com/docker/docker/api/types/container
    PluginConfig:
        title: PluginConfig The config of a plugin.
        x-go-package: github.com/docker/docker/api/types
    PluginMount:
        description: PluginMount plugin mount
        x-go-package: github.com/docker/docker/api/types
    PluginSettings:
        title: PluginSettings Settings that can be modified by users.
        x-go-package: github.com/docker/docker/api/types
    Port:
        description: Port An open port on a container
        x-go-package: github.com/docker/docker/api/types
    ContainerChangeResponseItem:
        description: ContainerChangeResponseItem change item in response to ContainerChanges operation
        x-go-package: github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
        description: ContainerUpdateOKBody OK response to ContainerUpdate operation
        x-go-package: github.com/docker/docker/api/types/container
    ContainerWaitOKBodyError:
        description: ContainerWaitOKBodyError container waiting error, if any
        x-go-package: github.com/docker/docker/api/types/container
    HistoryResponseItem:
        description: HistoryResponseItem individual image layer information in response to ImageHistory operation
        x-go-package: github.com/docker/docker/api/types/image
    IdResponse:
        description: IDResponse Response to an API call that returns just an Id
        x-go-name: IDResponse
        x-go-package: github.com/docker/docker/api/types
    ImageSummary:
        description: ImageSummary image summary
        x-go-package: github.com/docker/docker/api/types
    ContainerWaitOKBody:
        description: ContainerWaitOKBody OK response to ContainerWait operation
        x-go-package: github.com/docker/docker/api/types/container
    ImageDeleteResponseItem:
        description: ImageDeleteResponseItem image delete response item
        x-go-package: github.com/docker/docker/api/types
    PluginConfigLinux:
        description: PluginConfigLinux plugin config linux
        x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
        description: PluginConfigNetwork plugin config network
        x-go-package: github.com/docker/docker/api/types
    ErrorResponse:
        title: ErrorResponse Represents an error.
        x-go-package: github.com/docker/docker/api/types
    PluginEnv:
        description: PluginEnv plugin env
        x-go-package: github.com/docker/docker/api/types
responses:
    ComponentDefinition:
        description: ""
        schema:
            additionalProperties: false
            type: object
        headers:
            displayName:
                type: string
            format: {}
            kind:
                type: string
            metadata: {}
            model: {}
            schema:
                type: string
            apiVersion:
                type: string
    applicationFilesResponseWrapper:
        description: Returns the response of the application files
    mesheryFiltersResponseWrapper:
        description: Returns all meshery filters
    performanceProfilesResponseWrapper:
        description: Returns all the performance profiles
    systemAdaptersRespWrapper:
        description: Return all the adapters
        schema:
            type: array
            items: {}
    prometheusBoardImportRespWrapper:
        description: Response for prometheus board import
    FilterFilesResponseWrapper:
        description: Returns the response of the Filter files
    RelationshipDefinition:
        description: |-
            https://docs.google.com/drawings/d/1_qzQ_YxvCWPYrOBcdqGMlMwfbsZx96SBuIkbn8TfKhU/edit?pli=1
            see RELATIONSHIPDEFINITIONS table in the diagram
        schema:
            type: object
            additionalProperties: false
        headers:
            model: {}
            selectors: {}
            subType:
                type: string
            apiVersion:
                type: string
            kind:
                type: string
            metadata: {}
    mesheryPatternResponseWrapper:
        description: Returns a single meshery pattern
    mesheryPatternsResponseWrapper:
        description: Returns all meshery patterns
    v1ServicesMapResponseWrapper:
        description: Returns a map for v1 services
        schema:
            additionalProperties: false
            type: object
    grafanaBoardsResponseWrapper:
        schema:
            type: array
            items: {}
        description: Returns Grafana boards and panels
    mesheryFilterResponseWrapper:
        description: Returns a single meshery filter
    mesheryVersionRespWrapper:
        description: Returns Meshery version
    perfSingleResultRespWrapper:
        description: Returns Single test result
    userLoadTestPrefsRespWrapper:
        description: Returns User Load Test Preferencee
    k8sContextsRespWrapper:
        description: Returns kubernetes context list
    perfTestPrefsRespWrapper:
        description: Returns Perf test preference
    schedulesResponseWrapper:
        description: Returns List of saved schedules
    ModelResponse:
        description: ""
        headers:
            category:
                type: string
            components:
                items: {}
                type: array
            modelDisplayName:
                type: string
            name:
                type: string
            relationships:
                type: array
                items: {}
            subCategory:
                type: string
            version:
                type: string
    k8sConfigRespWrapper:
        description: Returns saved kubernetes config
    mesheryApplicationsResponseWrapper:
        description: Returns all meshery applications
    performanceProfileResponseWrapper:
        description: Returns a single performance profile
    prometheusConfigResponseWrapper:
        description: Returns prometheus configuration
    listProvidersRespWrapper:
        description: Returns a list of available providers
        schema:
            type: object
            additionalProperties: false
    mesheryApplicationResponseWrapper:
        description: Fetches a single Meshery Application
    noContentWrapper:
        description: ""
    prometheusStaticBoardRespWrapper:
        description: Returns Prometheus static board
        schema:
            type: object
            additionalProperties: false
    userInfo:
        description: Returns user info
    Model:
        description: ""
        headers:
            modelDisplayName:
                type: string
            name:
                type: string
            subCategory:
                type: string
            version:
                type: string
            category:
                type: string
    grafanaConfigResponseWrapper:
        description: Returns Grafana configs
    loadTestPreferencesWrapper:
        description: Returns load test preferences
    mesheryAdaptersRespWrapper:
        description: Returns all the meshery adapters
        schema:
            type: array
            items: {}
    performanceResultsResponseWrapper:
        description: Returns all performance results
    singleScheduleResponseWrapper:
        description: Returns a single schedules
securityDefinitions:
    token:
        type: apiKey
        name: token
        in: cookie
security:
    - token:
        - '[]'
