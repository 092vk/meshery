name: Meshery Integrations Updater
on:
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/integrations-updater.yml"
  workflow_dispatch:

# This workflow uses the service account: meshery-integrations-sheet@meshery-237716.iam.gserviceaccount.com
# See these instructions for setup - https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication

jobs:
  # print-inputs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo "Dispatched GIT_VERSION: ${{github.event.inputs.release-ver}}"
  #         echo " Dispatched GIT_STRIPPED_VERSION: ${{github.event.inputs.stripped-release-ver}}"
  #         echo "Env RELEASE_CHANNEL: ${{env.RELEASE_CHANNEL}}"
  #         echo "Env GIT_VERSION: ${{env.GIT_VERSION}}"
  #         echo "Env GIT_STRIPPED_VERSION: ${{env.GIT_STRIPPED_VERSION}}"
  #         echo "Env GIT_TAG: ${{ github.event.release.tag_name }}"
  integrations:
    runs-on: ubuntu-latest
    steps:
      - name: GITHUB_WORKSPACE
        run: |
          echo {{$GITHUB_WORKSPACE}}
          pwd
          ls
      - name: Checkout Meshery repo
        uses: actions/checkout@master
        with:
          path: meshery
      - name: GITHUB_WORKSPACE
        run: |
          echo {{$GITHUB_WORKSPACE}}
          pwd
          ls
      - name: Checkout site repo
        uses: actions/checkout@master
        with:
          repository: layer5io/layer5
          path: site
      - name: GITHUB_WORKSPACE
        run: |
          echo {{$GITHUB_WORKSPACE}}
          pwd
          ls
      - id: "read_worksheet"
        uses: jroehl/gsheet.action@release # you can specify '@release' to always have the latest changes
        with:
          spreadsheetId: 1DZHnzxYWOlJ69Oguz4LkRVTFM79kC2tuvdwizOJmeMw
          commands: | # list of commands, specified as a valid JSON string
            [
              { "command": "getData", "args": { "range": "'Meshery Integrations'!AA4:AC515" } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
      # - name: Overwrite integrations
      #   uses: "DamianReeves/write-file-action@master"
      #   with:
      #     path: .github/scripts/integrations.json
      #     write-mode: overwrite
      #     contents: |
      #       ${{ steps.read_worksheet.outputs.results }}
      - name: save results
        run: |
          set echo off
          cat {{ steps.read_worksheet.outputs.results }} > meshery/.github/scripts/integrations.json
      - name: dump results
        # env:
        #   #  the output of the action can be found in ${{ steps.update_worksheet.outputs.results }}
        #   INTEGRATIONS: ${{ steps.read_worksheet.outputs.results }}
        run: bash ./github/scripts/integration_publisher.sh
        # run: echo "$INTEGRATIONS" | jq ' .results[].result.rawData[0][0]' --raw-output

      # { "command": "addWorksheet", "args": { "worksheetTitle": "<worksheetTitle>" }},
      #           { "command": "updateData", "args": { "data": [["A1", "A2", "A3"]] }},
      - name: parse results
        run: |
          INTEGRATIONS=$(< .github/scripts/integrations.json)
          integration_count=$(jq ' .results[].result.rawData | length' $INTEGRATIONS)

          for (( i=0; i<integration_count; i++ ))
          do 
              integration_name=$(jq " .results[].result.rawData[${i}][0]" -r $INTEGRATIONS)
              integration_data=$(jq " .results[].result.rawData[${i}][1]" -r $INTEGRATIONS)
              mkdir -p ${integration_name}/icon/color
              mkdir -p ${integration_name}/icon/white
              echo $integration_data > ${integration_name}/index.mdx   
          done
      # bash ./github/scripts/integration_publisher.sh
      # run: echo ${{ steps.read_worksheet.outputs.results }} | jq " .results[].result.rawData[0][1]" --raw-output

      # - name: Commit changes
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     file_pattern: docs/
      #     commit_user_name: l5io
      #     commit_user_email: ci@layer5.io
      #     commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
      #     commit_options: "--signoff"
      #     commit_message: "[Docs] Generated documentation for GraphQL API"
      #     branch: master

