name: Docker Desktop Extension for Meshery
  # TODO 
  ##   1) Incorporate mesheryctl binaries into each DDE image

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Release Channel
        id: release-channel
        run: |
          if [startsWith(github.ref, 'refs/tags/')]
          then
              echo "RELEASE_CHANNEL=stable" >> $GITHUB_ENV
          else
              echo "RELEASE_CHANNEL=stable" >> $GITHUB_ENV
          fi
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: meshery/meshery-docker-desktop-extension
        tags: |
          prefix=${{env.RELEASE_CHANNEL}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: (Edge) Build and Push 
        if: github.repository == 'meshery/meshery' && startsWith(github.ref, 'refs/tags/') != true && success()
        env: 
          RELEASE_CHANNEL: "edge"
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:install/docker-desktop-extension"
          push: true
          tags: |
            ${{env.RELEASE_CHANNEL}}-latest
            ${{env.RELEASE_CHANNEL}}-${{GITHUB_SHA::8}}
      - 
        name: (Stable) Build and Push 
        if: github.repository == 'meshery/meshery' && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        env: 
          RELEASE_CHANNEL: "stable"
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:install/docker-desktop-extension"
          push: true
          tags: |
            ${{env.RELEASE_CHANNEL}}-latest
            ${{env.RELEASE_CHANNEL}}-${{GITHUB_SHA::8}}
            ${{env.RELEASE_CHANNEL}}-${{GITHUB_REF/refs\/tags\//}}



# jobs:
#   docker:
#     name: Release Docker Desktop Extension for Meshery
#     runs-on: ubuntu-latest
#     env:
#       IMAGE_NAME: "meshery/meshery-docker-desktop-extension"
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 1
#       # Log into Docker Hub
#       - name: Docker Hub Login
#         uses: azure/docker-login@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # Edge release channel
#       - name: (Edge) Docker Desktop Extension - Build and Tag
#         if: github.repository == 'meshery/meshery' && startsWith(github.ref, 'refs/tags/') != true && success()
#         env:
#           RELEASE_CHANNEL: "edge"
#         run: |
#           DOCKER_BUILDKIT=1 docker build --no-cache -t ${IMAGE_NAME}:${RELEASE_CHANNEL}-latest --build-arg TOKEN=${{ secrets.GLOBAL_TOKEN }} --build-arg GIT_COMMITSHA=${GITHUB_SHA::8} --build-arg GIT_VERSION="${RELEASE_CHANNEL}-latest" --build-arg RELEASE_CHANNEL=${RELEASE_CHANNEL} .
          
#           docker tag -t ${IMAGE_NAME}:${RELEASE_CHANNEL}-latest -t ${IMAGE_NAME}:${RELEASE_CHANNEL}-${GITHUB_SHA::8}

#       # Stable release channel
#       - name: (Stable) Docker Desktop Extension - Build and Tag
#         if: github.repository == 'meshery/meshery' && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
#         env:
#           RELEASE_CHANNEL: "stable"
#         run: |
#           DOCKER_BUILDKIT=1 docker build --no-cache -t ${IMAGE_NAME}:${RELEASE_CHANNEL}-latest --build-arg TOKEN=${{ secrets.GLOBAL_TOKEN }} --build-arg GIT_COMMITSHA=${GITHUB_SHA::8} --build-arg GIT_VERSION=${GITHUB_REF/refs\/tags\//} --build-arg RELEASE_CHANNEL=${RELEASE_CHANNEL} .

#           docker tag -t ${IMAGE_NAME}:${RELEASE_CHANNEL}-latest -t ${RELEASE_CHANNEL}-${GITHUB_REF/refs\/tags\//} -t ${IMAGE_NAME}:${RELEASE_CHANNEL}-${GITHUB_SHA::8}

#       # Push image for either release channel
#       - name: Push Docker Desktop Extension for Meshery to Docker Hub
#         run: |
#           docker push ${IMAGE_NAME} --all-tags
