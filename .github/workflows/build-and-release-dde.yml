name: Docker Desktop Extension for Meshery
  # TODO 
  ##   1) Incorporate mesheryctl binaries into each DDE image

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  build-push:
    name: Release Docker Desktop Extension for Meshery
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      # Log into Docker Hub
      - name: Docker Hub Login
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Edge release channel
      - name: (Edge) Docker Desktop Extension - Build and Tag
        if: github.repository == 'meshery/meshery' && startsWith(github.ref, 'refs/tags/') != true && success()
        env:
          RELEASE_CHANNEL: "edge"
        run: |
          DOCKER_BUILDKIT=1 docker build --no-cache -t meshery/meshery-docker-desktop-extension:${RELEASE_CHANNEL}-latest --build-arg TOKEN=${{ secrets.GLOBAL_TOKEN }} --build-arg GIT_COMMITSHA=${GITHUB_SHA::8} --build-arg GIT_VERSION="${RELEASE_CHANNEL}-latest" --build-arg RELEASE_CHANNEL=${RELEASE_CHANNEL} .
          docker tag meshery/meshery-docker-desktop-extension:${RELEASE_CHANNEL}-latest meshery/meshery-docker-desktop-extension:edge-${GITHUB_SHA::8}

      # Stable release channel
      - name: (Stable) Docker Desktop Extension - Build and Tag
        if: github.repository == 'meshery/meshery' && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        env:
          RELEASE_CHANNEL: "stable"
        run: |
          DOCKER_BUILDKIT=1 docker build --no-cache -t ${{ secrets.IMAGE_NAME }}:${RELEASE_CHANNEL}-latest --build-arg TOKEN=${{ secrets.GLOBAL_TOKEN }} --build-arg GIT_COMMITSHA=${GITHUB_SHA::8} --build-arg GIT_VERSION=${GITHUB_REF/refs\/tags\//} --build-arg RELEASE_CHANNEL=${RELEASE_CHANNEL} .
          docker tag ${{ secrets.IMAGE_NAME }}:${RELEASE_CHANNEL}-latest ${{ secrets.IMAGE_NAME }}:${RELEASE_CHANNEL}-${GITHUB_REF/refs\/tags\//}
          docker tag ${{ secrets.IMAGE_NAME }}:${RELEASE_CHANNEL}-latest ${{ secrets.IMAGE_NAME }}:${RELEASE_CHANNEL}-${GITHUB_SHA::8}        

      # Push image for either release channel
      - name: Push Docker Desktop Extension for Meshery to Docker Hub
        run: |
          docker push meshery/meshery-docker-desktop-extension:${RELEASE_CHANNEL}-latest
          docker push meshery/meshery-docker-desktop-extension:${RELEASE_CHANNEL}-${GITHUB_SHA::8}
