name: Docker Extension for Meshery
on:
  workflow_call:
  # push:
  #   tags:
  #     - "v*"
  workflow_dispatch:
    inputs:
      release-ver:
        description: "Stable Release Version"
        required: true
        default: "v"
      stripped-release-ver:
        description: "Stripped Stable Release Version"
        required: true
        default: ""
      release-channel:
        description: "Release Channel"
        required: true
        default: "edge"

env:
  GIT_VERSION: ${{github.event.inputs.release-ver}}
  GIT_STRIPPED_VERSION: ${{github.event.inputs.stripped-release-ver}}
  RELEASE_CHANNEL: ${{github.event.inputs.release-channel}}
  GIT_TAG: ${{ github.event.release.tag_name }}

jobs:
  print-inputs:
    runs-on: ubuntu-22.04
    steps:
      - run: |
          echo "Dispatched GIT_VERSION: ${{github.event.inputs.release-ver}}"
          echo " Dispatched GIT_STRIPPED_VERSION: ${{github.event.inputs.stripped-release-ver}}"
          echo "Env RELEASE_CHANNEL: ${{env.RELEASE_CHANNEL}}"
          echo "Env GIT_VERSION: ${{env.GIT_VERSION}}"
          echo "Env GIT_STRIPPED_VERSION: ${{env.GIT_STRIPPED_VERSION}}"
          echo "Env GIT_TAG: ${{ github.event.release.tag_name }}"

  docker-extension:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🛎️ repo
        uses: actions/checkout@master
      - name: Identify Release Values
        if: "${{ github.event.inputs.release-ver}} != 'v' }}"
        run: |
          # GIT_TAG=`git symbolic-ref HEAD`
          if [[ ${GITHUB_REF} = refs/tags* ]]
          then
            echo RELEASE_CHANNEL=stable >> $GITHUB_ENV
          else
            echo RELEASE_CHANNEL=edge >> $GITHUB_ENV
          fi
          LATEST_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g') >> $GITHUB_ENV
          GIT_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g') >> $GITHUB_ENV
          GIT_STRIPPED_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g' | cut -c2-)
          echo "Release channel determined to be $RELEASE_CHANNEL"
          echo "GIT_LATEST=$LATEST_VERSION" >> $GITHUB_ENV
          echo "GIT_VERSION=$GIT_VERSION" >> $GITHUB_ENV
          echo "GIT_STRIPPED_VERSION=$GIT_STRIPPED_VERSION" >> $GITHUB_ENV
        shell: bash
